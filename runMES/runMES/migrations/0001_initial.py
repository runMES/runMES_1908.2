# Generated by Django 2.2.1 on 2019-09-04 07:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlarmHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=30)),
                ('alarm_txt', models.CharField(blank=True, max_length=300)),
                ('source', models.CharField(blank=True, db_index=True, max_length=30)),
                ('category', models.CharField(blank=True, db_index=True, max_length=30)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('device_time', models.DateTimeField(blank=True, null=True)),
                ('annotation', models.CharField(blank=True, max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=10, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='BinGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=True, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='Binning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='BonusScrapCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('bonus_scrap', models.CharField(choices=[('B', 'Bonus'), ('S', 'Scrap')], db_index=True, max_length=1)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('freeze', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='BonusScrapHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('process_step', models.CharField(blank=True, max_length=30, null=True)),
                ('lot_state', models.CharField(blank=True, max_length=2, null=True)),
                ('eq', models.CharField(blank=True, max_length=30, null=True)),
                ('bonus_scrap', models.CharField(max_length=10)),
                ('lot_old_qty', models.IntegerField()),
                ('bonus_scrap_qty', models.IntegerField()),
                ('code', models.CharField(max_length=30)),
                ('op', models.CharField(max_length=30)),
                ('run_id', models.UUIDField(blank=True, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
                ('trans_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Breaking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('break_qty', models.IntegerField(verbose_name='Brk Qty')),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='BreakingHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('eq', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('breaking', models.CharField(max_length=30)),
                ('from_qty', models.IntegerField()),
                ('to_qty', models.IntegerField()),
                ('from_product', models.CharField(max_length=30)),
                ('to_product', models.CharField(max_length=30)),
                ('run_id', models.UUIDField(blank=True, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('op', models.CharField(max_length=30)),
                ('annotation', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CheckSpecHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dcitem_spec', models.CharField(db_index=True, max_length=30)),
                ('dcplan', models.CharField(max_length=30)),
                ('dcitem', models.CharField(db_index=True, max_length=30)),
                ('violation', models.CharField(blank=True, max_length=30, null=True)),
                ('val', models.CharField(blank=True, max_length=30, null=True)),
                ('lot', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('eq', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('exact_text', models.CharField(blank=True, max_length=30, null=True)),
                ('spec_target', models.CharField(blank=True, max_length=30, null=True)),
                ('spec_high', models.CharField(blank=True, max_length=30, null=True)),
                ('spec_low', models.CharField(blank=True, max_length=30, null=True)),
                ('OOS_hold_lot', models.BooleanField()),
                ('OOS_hold_eq', models.BooleanField()),
                ('OOS_mail', models.BooleanField()),
                ('hold_lot', models.CharField(blank=True, max_length=30, null=True)),
                ('hold_eq', models.CharField(blank=True, max_length=30, null=True)),
                ('send_mail', models.CharField(blank=True, max_length=60, null=True)),
                ('trans_time', models.DateTimeField(auto_now=True)),
                ('step', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('run_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('op', models.CharField(blank=True, max_length=30, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ComponentMapHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_id', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='ComponentID')),
                ('lastupdate', models.DateTimeField(auto_now=True, db_index=True)),
                ('product', models.CharField(max_length=30)),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('alias', models.CharField(blank=True, db_index=True, max_length=30, null=True, unique=True)),
                ('component_map_uuid', models.UUIDField(db_index=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DcItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(default=True, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='DcItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('data_type', models.CharField(choices=[('I', 'INTEGER'), ('F', 'FLOAT'), ('T', 'TEXT'), ('B', 'BOOLEAN')], max_length=1, verbose_name='Type')),
                ('unit', models.CharField(max_length=30)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='DcItemSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('exact_text', models.CharField(blank=True, max_length=30, null=True, verbose_name='TxtSpec')),
                ('spec_target', models.FloatField(blank=True, null=True, verbose_name='Target')),
                ('spec_high', models.FloatField(blank=True, null=True, verbose_name='SpecH')),
                ('spec_low', models.FloatField(blank=True, null=True, verbose_name='SpecL')),
                ('screen_high', models.FloatField(blank=True, null=True, verbose_name='ScreenH')),
                ('screen_low', models.FloatField(blank=True, null=True, verbose_name='ScreenL')),
                ('OOS_hold_lot', models.BooleanField(default=False, verbose_name='HoldLot')),
                ('OOS_hold_eq', models.BooleanField(default=False, verbose_name='HoldEQ')),
                ('OOS_mail', models.BooleanField(default=False, verbose_name='Mail')),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=True, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
                ('dcitem', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.DcItem', verbose_name='Item')),
            ],
        ),
        migrations.CreateModel(
            name='DcPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='DcPlanHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dcplan', models.CharField(db_index=True, max_length=30)),
                ('transaction', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('op', models.CharField(blank=True, max_length=30, null=True)),
                ('trans_type', models.CharField(blank=True, db_index=True, default='U', max_length=1, null=True)),
                ('lot', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('eq', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('trans_time', models.DateTimeField(auto_now=True)),
                ('device_time', models.DateTimeField(blank=True, null=True)),
                ('step', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('run_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Eq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('eq_type', models.CharField(choices=[('L', 'LINE'), ('A', 'STANDALONE'), ('S', 'SUB EQ'), ('D', 'LD_UD'), ('T', 'TRANSPORTATION')], default='A', max_length=1)),
                ('ctrl_state', models.CharField(choices=[('RA', 'Run Available'), ('RN', 'Run Not Available'), ('PM', 'Maintenance'), ('ID', 'Idle'), ('DM', 'Down'), ('LN', 'Lend'), ('SU', 'Setup')], db_index=True, default='ID', max_length=2, verbose_name='State')),
                ('is_hold', models.BooleanField(default=False, verbose_name='Hold')),
                ('hold_reason', models.CharField(blank=True, max_length=256, null=True)),
                ('is_virtual', models.BooleanField(default=False, verbose_name='Virtual')),
                ('last_recipe', models.CharField(blank=True, max_length=30, null=True)),
                ('eq_record_time', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(default=False, verbose_name='Frz')),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('area', models.ForeignKey(limit_choices_to={'freeze': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.Area')),
            ],
        ),
        migrations.CreateModel(
            name='EqGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('owner_mail', models.EmailField(blank=True, max_length=254, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='EqHoldHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eq', models.CharField(db_index=True, max_length=30)),
                ('op', models.CharField(blank=True, max_length=30, null=True)),
                ('hold_release', models.CharField(choices=[('H', 'Hold'), ('R', 'Release')], max_length=1)),
                ('hold_code', models.CharField(blank=True, max_length=30, null=True)),
                ('release_code', models.CharField(blank=True, max_length=30, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EqHoldReleaseCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('hold_release', models.CharField(choices=[('H', 'Hold'), ('R', 'Release')], db_index=True, max_length=1)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('freeze', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='EqRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('instruction', models.TextField(blank=True, max_length=2000, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
                ('dcplan', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.DcPlan')),
                ('eq_group', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.EqGroup', verbose_name='EQ GRP')),
            ],
        ),
        migrations.CreateModel(
            name='EqStateHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eq', models.CharField(db_index=True, max_length=30)),
                ('op', models.CharField(blank=True, max_length=30, null=True)),
                ('ctrl_state', models.CharField(blank=True, max_length=2, null=True)),
                ('transaction', models.CharField(db_index=True, max_length=30)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('trans_time', models.DateTimeField(auto_now=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LotBinHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('binning', models.CharField(max_length=30)),
                ('bin_grade', models.CharField(max_length=30)),
                ('qty', models.IntegerField()),
                ('run_id', models.UUIDField(blank=True, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('op', models.CharField(max_length=30)),
                ('annotation', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LotCtrlStateHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('ctrl_state', models.CharField(blank=True, max_length=2, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('run_id', models.UUIDField(blank=True, null=True)),
                ('op', models.CharField(max_length=30)),
                ('annotation', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LotHoldHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('op', models.CharField(max_length=30)),
                ('hold_release', models.CharField(choices=[('H', 'Hold'), ('R', 'Release')], max_length=1)),
                ('hold_code', models.CharField(blank=True, max_length=30, null=True)),
                ('release_code', models.CharField(blank=True, max_length=30, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('run_id', models.UUIDField(blank=True, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LotHoldReleaseCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('hold_release', models.CharField(choices=[('H', 'Hold'), ('R', 'Release')], db_index=True, max_length=1)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('freeze', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='LotPriorityHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(max_length=30)),
                ('new_priority', models.IntegerField()),
                ('old_priority', models.IntegerField()),
                ('op', models.CharField(max_length=30)),
                ('annotation', models.CharField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LotShipHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('workorder', models.CharField(max_length=30)),
                ('owner', models.CharField(blank=True, max_length=30, null=True)),
                ('grade', models.CharField(blank=True, max_length=30, null=True)),
                ('qty', models.IntegerField()),
                ('ship_date', models.DateTimeField(auto_now=True)),
                ('annotation', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LotSplitMergeHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_lot', models.CharField(max_length=30)),
                ('parent_qty', models.IntegerField()),
                ('child_lot', models.CharField(max_length=30)),
                ('child_qty', models.IntegerField()),
                ('op', models.CharField(max_length=30)),
                ('split_merge', models.CharField(choices=[('S', 'Split'), ('M', 'Merge')], max_length=1)),
                ('parent_step_uuid', models.UUIDField(blank=True, null=True)),
                ('child_step_uuid', models.UUIDField(blank=True, null=True)),
                ('run_id', models.UUIDField(blank=True, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('trans_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('annotation', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LotStartHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_order', models.CharField(db_index=True, max_length=30)),
                ('lot', models.CharField(db_index=True, max_length=30, unique=True)),
                ('qty', models.IntegerField()),
                ('op', models.CharField(blank=True, max_length=30, null=True)),
                ('type', models.CharField(blank=True, max_length=1)),
                ('start_date', models.DateTimeField(auto_now=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('annotation', models.CharField(max_length=100)),
                ('component_map_uuid', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LotStepHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('eq', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('qty', models.CharField(blank=True, max_length=30, null=True)),
                ('op', models.CharField(blank=True, max_length=30, null=True)),
                ('recipe', models.CharField(blank=True, max_length=30, null=True)),
                ('product', models.CharField(blank=True, max_length=30, null=True)),
                ('process', models.CharField(blank=True, max_length=30, null=True)),
                ('process_step', models.CharField(blank=True, max_length=30, null=True)),
                ('transaction', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('trans_time', models.DateTimeField(auto_now=True)),
                ('run_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
                ('component_map_uuid', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LotTerminateHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(db_index=True, max_length=30)),
                ('work_order', models.CharField(db_index=True, max_length=30)),
                ('product', models.CharField(max_length=30)),
                ('process', models.CharField(max_length=30)),
                ('process_step', models.CharField(max_length=30)),
                ('op', models.CharField(max_length=30)),
                ('run_id', models.UUIDField(blank=True, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
                ('trans_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MailQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver', models.EmailField(max_length=254)),
                ('level', models.CharField(choices=[('A', 'Alert'), ('I', 'Info'), ('W', 'Warning')], max_length=1)),
                ('subject', models.CharField(max_length=100)),
                ('contents', models.CharField(max_length=2048)),
                ('record_timestamp', models.DateTimeField(auto_now=True)),
                ('is_overdue', models.BooleanField(db_index=True, default=False)),
                ('is_deliver', models.BooleanField(db_index=True, default=False)),
                ('first_timestamp', models.DateTimeField(blank=True, null=True)),
                ('deliver_timestamp', models.DateTimeField(blank=True, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelImportLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('contents', models.TextField(max_length=2048)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('unit', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(default=False, verbose_name='Frz')),
                ('process', models.ForeignKey(blank=True, limit_choices_to={'active': True, 'freeze': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.Process')),
            ],
        ),
        migrations.CreateModel(
            name='ProductChangeHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_product', models.CharField(db_index=True, max_length=30)),
                ('from_process', models.CharField(max_length=30)),
                ('from_process_step', models.CharField(max_length=30)),
                ('from_lot', models.CharField(db_index=True, max_length=30)),
                ('from_lot_ctrl_state', models.CharField(max_length=30)),
                ('to_product', models.CharField(db_index=True, max_length=30)),
                ('to_process', models.CharField(blank=True, max_length=30, null=True)),
                ('to_process_step', models.CharField(blank=True, max_length=30, null=True)),
                ('run_id', models.UUIDField(blank=True, null=True)),
                ('transaction', models.CharField(blank=True, max_length=30, null=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('op', models.CharField(max_length=30)),
                ('annotation', models.CharField(max_length=100)),
                ('trans_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StepCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
            ],
        ),
        migrations.CreateModel(
            name='TextTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('instruction', models.TextField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkOrderHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30)),
                ('ERP_ref', models.CharField(blank=True, db_index=True, max_length=60, null=True)),
                ('lot_type', models.CharField(choices=[('P', 'Product'), ('E', 'Engineer'), ('D', 'Dummy'), ('M', 'Monitor')], default='P', max_length=1)),
                ('qty', models.IntegerField()),
                ('qty_left', models.IntegerField()),
                ('lot_priority', models.IntegerField(db_index=True, default=3, help_text='1-5 High-Low', validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start')),
                ('target_date', models.DateTimeField(verbose_name='Target')),
                ('op', models.CharField(blank=True, max_length=30, null=True)),
                ('owner', models.CharField(blank=True, max_length=30, null=True)),
                ('owner_email', models.EmailField(max_length=254)),
                ('owner_phone', models.CharField(blank=True, max_length=30, null=True)),
                ('is_close', models.BooleanField(default=False)),
                ('close_date', models.DateTimeField(blank=True, null=True)),
                ('instruction', models.TextField(blank=True, max_length=2048, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(verbose_name='Act')),
                ('freeze', models.BooleanField(verbose_name='Frz')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.Product')),
            ],
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('ERP_ref', models.CharField(blank=True, db_index=True, max_length=60, null=True)),
                ('lot_type', models.CharField(choices=[('P', 'Product'), ('E', 'Engineer'), ('D', 'Dummy'), ('M', 'Monitor')], default='P', max_length=1)),
                ('qty', models.IntegerField()),
                ('qty_left', models.IntegerField()),
                ('lot_priority', models.IntegerField(db_index=True, default=3, help_text='1-5 High-Low', validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start')),
                ('target_date', models.DateTimeField(verbose_name='Target')),
                ('op', models.CharField(blank=True, max_length=30, null=True)),
                ('owner', models.CharField(blank=True, max_length=30, null=True)),
                ('owner_email', models.EmailField(max_length=254)),
                ('owner_phone', models.CharField(blank=True, max_length=30, null=True)),
                ('is_close', models.BooleanField(default=False)),
                ('close_date', models.DateTimeField(blank=True, null=True)),
                ('instruction', models.TextField(blank=True, max_length=2048, null=True)),
                ('annotation', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(verbose_name='Act')),
                ('freeze', models.BooleanField(verbose_name='Frz')),
                ('product', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('data_type', models.CharField(choices=[('N', 'NUMERIC'), ('T', 'TEXT')], max_length=1)),
                ('lastupdate', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=False)),
                ('freeze', models.BooleanField(default=False)),
                ('product', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('recipe', models.CharField(max_length=30)),
                ('instruction', models.TextField(blank=True, max_length=2048, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='Frz')),
                ('binning', models.ForeignKey(blank=True, limit_choices_to={'freeze': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.Binning', verbose_name='Bin')),
                ('breaking', models.ForeignKey(blank=True, limit_choices_to={'freeze': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.Breaking', verbose_name='Break')),
                ('category', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.StepCategory', verbose_name='Category')),
                ('dcplan', models.ForeignKey(blank=True, limit_choices_to={'freeze': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dc_plan', to='runMES.DcPlan', verbose_name='DC Plan')),
                ('eq_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runMES.EqGroup', verbose_name='EQ Grp')),
                ('step_check', models.ForeignKey(blank=True, limit_choices_to={'freeze': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.EqRecord', verbose_name='StepChk')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessProcessStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastupdate', models.DateTimeField(auto_now=True)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runMES.Process')),
                ('process_step', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.ProcessStep')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('data_type', models.CharField(choices=[('N', 'NUMERIC'), ('T', 'TEXT')], max_length=1)),
                ('lastupdate', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(default='', max_length=30)),
                ('active', models.BooleanField(default=False)),
                ('freeze', models.BooleanField(default=False)),
                ('process', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.Process')),
            ],
        ),
        migrations.AddField(
            model_name='process',
            name='process_step',
            field=models.ManyToManyField(through='runMES.ProcessProcessStep', to='runMES.ProcessStep', verbose_name='Step'),
        ),
        migrations.CreateModel(
            name='LotRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Update')),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name='Act')),
                ('freeze', models.BooleanField(db_index=True, default=False, verbose_name='frz')),
                ('dcplan', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.DcPlan')),
            ],
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='LotID')),
                ('ctrl_state', models.CharField(choices=[('R', 'Run'), ('I', 'Idle'), ('F', 'Finish'), ('S', 'Ship'), ('T', 'Terminate'), ('B', 'Bank')], db_index=True, default='I', max_length=1)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_hold', models.BooleanField(default=False)),
                ('hold_reason', models.CharField(blank=True, max_length=256, null=True)),
                ('is_finish', models.BooleanField(db_index=True, default=False)),
                ('step_recipe', models.CharField(blank=True, max_length=30, null=True, verbose_name='Recipe')),
                ('step_check', models.CharField(blank=True, max_length=30, null=True, verbose_name='StepChk')),
                ('step_dcplan', models.CharField(blank=True, max_length=30, null=True, verbose_name='DcPlan')),
                ('step_product', models.CharField(blank=True, max_length=30, null=True, verbose_name='StepProduct')),
                ('step_binning', models.CharField(blank=True, max_length=30, null=True, verbose_name='Bin')),
                ('step_breaking', models.CharField(blank=True, max_length=30, null=True, verbose_name='Break')),
                ('workorder', models.CharField(db_index=True, max_length=30, verbose_name='WO')),
                ('qty', models.IntegerField()),
                ('next_operation', models.CharField(blank=True, choices=[('SC', 'StepCheck'), ('SI', 'StepIn'), ('SO', 'StepOut'), ('DC', 'DC'), ('BK', 'Breaking'), ('BI', 'Binning'), ('NP', 'New Product'), ('NO', 'None')], db_index=True, max_length=2, verbose_name='Next OP')),
                ('curr_location', models.CharField(choices=[('F', 'InFab'), ('E', 'InEQ'), ('O', 'OutSide')], db_index=True, max_length=1)),
                ('start_time', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, null=True)),
                ('target_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('lot_priority', models.IntegerField(db_index=True, default=3, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('run_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('owner', models.CharField(blank=True, max_length=30, null=True)),
                ('component_map_uuid', models.UUIDField(blank=True, null=True)),
                ('lot_type', models.CharField(choices=[('P', 'Product'), ('E', 'Engineer'), ('D', 'Dummy'), ('M', 'Monitor')], default='P', max_length=1)),
                ('lot_grade', models.CharField(blank=True, max_length=30, null=True)),
                ('last_step_uuid', models.UUIDField(blank=True, null=True)),
                ('last_step', models.CharField(blank=True, max_length=2, null=True)),
                ('last_step_time', models.DateTimeField(blank=True, null=True)),
                ('owner_mail', models.EmailField(blank=True, max_length=254, null=True)),
                ('curr_area', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='runMES.Area')),
                ('curr_eq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='runMES.Eq')),
                ('process', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='runMES.Process')),
                ('process_step', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='runMES.ProcessStep', verbose_name='Step')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.Product')),
            ],
        ),
        migrations.AddField(
            model_name='eq',
            name='group',
            field=models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=True, to='runMES.EqGroup'),
        ),
        migrations.AddField(
            model_name='eq',
            name='last_eq_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.EqRecord'),
        ),
        migrations.AddField(
            model_name='eq',
            name='last_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.Product'),
        ),
        migrations.AddField(
            model_name='eq',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=True, to='runMES.Eq'),
        ),
        migrations.CreateModel(
            name='DcValueHist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dcitem', models.CharField(db_index=True, max_length=30)),
                ('category', models.CharField(db_index=True, max_length=30)),
                ('datatype', models.CharField(max_length=30)),
                ('unit', models.CharField(max_length=30)),
                ('value', models.CharField(max_length=30)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('trans_time', models.DateTimeField(auto_now=True)),
                ('dcplan_hist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runMES.DcPlanHist')),
            ],
        ),
        migrations.CreateModel(
            name='DcPlanDcItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=True)),
                ('dcitem_spec', models.ForeignKey(blank=True, limit_choices_to={'freeze': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='runMES.DcItemSpec')),
                ('dcitems', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.DcItem')),
                ('dcplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runMES.DcPlan')),
            ],
        ),
        migrations.AddField(
            model_name='dcplan',
            name='dcitem_spec',
            field=models.ManyToManyField(blank=True, through='runMES.DcPlanDcItem', to='runMES.DcItemSpec', verbose_name='Spec'),
        ),
        migrations.AddField(
            model_name='dcplan',
            name='dcitems',
            field=models.ManyToManyField(through='runMES.DcPlanDcItem', to='runMES.DcItem', verbose_name='Items'),
        ),
        migrations.AddField(
            model_name='dcitem',
            name='dcitem_category',
            field=models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.DcItemCategory', verbose_name='Category'),
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_id', models.CharField(db_index=True, max_length=30, unique=True, verbose_name='ComponentID')),
                ('lastupdate', models.DateTimeField(auto_now=True, db_index=True)),
                ('product', models.CharField(max_length=30)),
                ('alias', models.CharField(blank=True, db_index=True, max_length=30, null=True, unique=True)),
                ('lot', models.ForeignKey(blank=True, null=True, on_delete=True, to='runMES.Lot')),
            ],
        ),
        migrations.AddField(
            model_name='breaking',
            name='new_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runMES.Product', verbose_name='New Prod'),
        ),
        migrations.CreateModel(
            name='Binning_BinGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bin_grades', models.ForeignKey(limit_choices_to={'freeze': True}, on_delete=django.db.models.deletion.CASCADE, to='runMES.BinGrade')),
                ('binning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runMES.Binning')),
            ],
        ),
        migrations.AddField(
            model_name='binning',
            name='bin_grades',
            field=models.ManyToManyField(through='runMES.Binning_BinGrade', to='runMES.BinGrade', verbose_name='Bin_Grade'),
        ),
    ]
