"""
Django settings for runMES project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR=os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY='wmsb9qhu9zl)kz1+mfv_!#z5$@mvw%t+_&nms7lf-a=fjvf+$-'

# SECURITY WARNING: debug mode not in production!
DEBUG=False

ALLOWED_HOSTS=['*']

# Application definition

INSTALLED_APPS=[
  'django.contrib.admin',
  'django.contrib.auth',
  'django.contrib.contenttypes',
  'django.contrib.sessions',
  'django.contrib.messages',
  'django.contrib.staticfiles',
  'django.forms',
  'admin_reorder',
  'crispy_forms',
  'validators',
  'django_extensions',
  'whitenoise',
  'runMES',
  'MQTT',
  'modeling',
]

CRISPY_TEMPLATE_PACK='bootstrap3'

MIDDLEWARE=[
  'whitenoise.middleware.WhiteNoiseMiddleware',
  'django.middleware.security.SecurityMiddleware',
  'django.middleware.locale.LocaleMiddleware',
  'django.contrib.sessions.middleware.SessionMiddleware',
  'django.middleware.common.CommonMiddleware',
  'django.middleware.csrf.CsrfViewMiddleware',
  'django.contrib.auth.middleware.AuthenticationMiddleware',
  'django.contrib.messages.middleware.MessageMiddleware',
  'django.middleware.clickjacking.XFrameOptionsMiddleware',
  'admin_reorder.middleware.ModelAdminReorder',
]

LANGUAGES = [
('en', _('English')),
('cn', _('简中')),
('tz', _('繁中'))
]

LOCALE_PATHS = [os.path.join(BASE_DIR, "locale")]

ROOT_URLCONF='runMES.urls'

TEMPLATES=[
  {
    'BACKEND':'django.template.backends.django.DjangoTemplates',
    'DIRS':[os.path.join(BASE_DIR,'runMES/templates')],
    # 'DIRS':[os.path.join(BASE_DIR,'templates').replace('\\','/')],
    'APP_DIRS':True,
    'OPTIONS':{
      'context_processors':[
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
        'django.template.context_processors.i18n',
      ],
    },
  },
]

WSGI_APPLICATION='runMES.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES={
  'default':{
    # 'ENGINE': 'django.db.backends.sqlite3',
    # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    'ENGINE':'django.db.backends.postgresql_psycopg2',
    'NAME':'runMES',
    'USER':'runMES',
    'PASSWORD':'steptech',
    'HOST':'localhost',
    'PORT':'',
  }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS=[
  {
    'NAME':'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
  },
  {
    'NAME':'django.contrib.auth.password_validation.MinimumLengthValidator',
  },
  {
    'NAME':'django.contrib.auth.password_validation.CommonPasswordValidator',
  },
  {
    'NAME':'django.contrib.auth.password_validation.NumericPasswordValidator',
  },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE='en-us'

TIME_ZONE='Asia/Taipei'

USE_I18N=True

#USE_L10N=False

USE_TZ=True

#DATETIME_FORMAT='Y-m-d H:M:S'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

#for uWSGI when debug=False
STATIC_ROOT=os.path.join(BASE_DIR,"runMES/static/")

STATIC_URL='/static/'

# STATICFILES_DIRS=[
#   os.path.join(BASE_DIR,"runMES/static/"),
# ]


# custom login
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

# email setting
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_OVERDUE_MIN=120 #minutes

#CFM timer in second
CFM_TIMER=5

#lot list query timer in second
LOT_TIMER=10

#lot list ui timeout in second
LOT_LIST_TIMEOUT=60

# Admin grouping
ADMIN_REORDER=(
  # 'sites',

  # Reorder app models
  {'app':'auth','Label':'User Accounts Modeling -','models':('auth.User','auth.Group')},

  # Data collection modeling
  {'app':'runMES','label':'Data Collection Modeling - ',
   'models':('runMES.DcItemCategory','runMES.DcItem','runMES.DcItemSpec','runMES.DcPlan')},

  # EQ Modeling
  {'app':'runMES','label':'EQ Modeling - ','models':('runMES.Area','runMES.EqGroup','runMES.Eq')},

# Lot/EQ Record Modeling
  {'app':'runMES','label':'Lot/EQ Record Modeling -',
   'models':('runMES.LotRecord','runMES.EqRecord')},

  # Binning/Breaking modeling
  {'app':'runMES','label':'Binning Modeling - ',
   'models':('runMES.BinGrade','runMES.Binning')},

  # Process Flow Modeling
  {'app':'runMES','label':'Process Flow Modeling - ',
   'models':('runMES.StepCategory','runMES.ProcessStep','runMES.Process','runMES.ProcessParameters')},

  # Product modeling
  {'app':'runMES','label':'Product Modeling - ','models':(
    'runMES.Product','runMES.ProductProcess','runMES.ProductParameters','runMES.Breaking')},


  # Code Modeling
  {'app':'runMES','label':'Code Modeling - ','models':('runMES.BonusScrapCode','runMES.LotHoldReleaseCode','runMES.EqHoldReleaseCode')},

  # Lot Modeling
  {'app':'runMES','label':'Lot Modeling - ','models':('runMES.Lot',)},

  #Mail Queue
  {'app':'runMES','label':'Mail Queue Management - ','models':('runMES.MailQueue',)},

  #System Log
  {'app':'admin','label':'Admin Log - ','models':('admin.LogEntry',)},

)

# log settings

LOGGING={
  'version':1,
  'disable_existing_loggers':False,
  'handlers':{
    'file':{
      'level':'DEBUG',
      # 'class': 'logging.FileHandler',
      'class':'logging.handlers.TimedRotatingFileHandler',
      'filename':os.path.join(BASE_DIR,'runMES.log'),
      'when':'midnight',
      'backupCount':7,
      'formatter':'formatter1',
    },
    'console':{
      'level':'INFO',
      'class':'logging.StreamHandler',
      'formatter':'formatter1',
    },
    'EAP_file':{
      'level':'INFO',
      # 'class': 'logging.FileHandler',
      'class':'logging.handlers.TimedRotatingFileHandler',
      'filename':os.path.join(BASE_DIR,'EAP_IF.log'),
      'when':'midnight',
      'backupCount':7,
      'formatter':'formatter1',
    },
  },
  'loggers':{
    'django':{
      'handlers':['file','console'],
      'level':'WARNING',
      'propagate':True,
    },
    'runMES':{
      'handlers':['file','console'],
      'level':'DEBUG',
      'propagate':True,
    },
    'EAP':{
      'handlers':['EAP_file','console'],
      'level':'INFO',
      'propagate':True,
    },
  },
  'formatters':{
    'formatter1':{
      '()':'django.utils.log.ServerFormatter',
      'format':'[%(asctime)s] %(message)s',
    },
    'formatter2':{
      '()':'django.utils.log.ServerFormatter',
      'format':'(message)s',
    },
  },
}
